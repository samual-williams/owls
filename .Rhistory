d
names(d) <- c("what.do.if.owl.lands.on.the.roof", "1 prior", "3 control")
d
d <- d %>% gather(stage, n, 2:3) # convert to long format
d
c$n <- d$n # add n column to percent table
c
e <- rbind(a, c[4:6,])
e
c
e <- rbind(a, c[5:8,])
e
e$percent <- as.numeric(e$percent)
e
cbp4<- c("#56B4E9", "#009E73", "#E69F00", "#D55E00") # create colour blind palatte with 3 colours (used palatte from https://www.datanovia.com/en/blog/ggplot-colors-best-tricks-you-will-love/)
library(ggplot2)
p <- ggplot(e, aes(x = stage, y = percent,fill = what.do.if.owl.lands.on.the.roof)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp4, name = "What do you do if an owl \nlands on the roof of your home?", labels = c("Try and kill the owl", "Chase the owl away", "Run away", "Do nothing")) +
ylim(0,100) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
e
df <- Q6TreatmentData
a <- df %>% tabyl(what.do.if.owl.lands.on.the.roof, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
a
e
p <- ggplot(e, aes(x = stage, y = percent,fill = what.do.if.owl.lands.on.the.roof)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp4, name = "What do you do if an owl \nlands on the roof of your home?", labels = c("Try and kill the owl", "Chase the owl away", "Run away", "Do nothing")) +
ylim(0,101) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
plot_grid(p4, p5, p6, ncol = 1)
p <- ggplot(e, aes(x = stage, y = percent,fill = what.do.if.owl.lands.on.the.roof)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp4, name = "What do you do if an owl \nlands on the roof of your home?", labels = c("Try and kill the owl", "Chase the owl away", "Run away", "Do nothing")) +
ylim(0,101) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
p6 <- p
plot_grid(p4, p5, p6, ncol = 1)
df <- Q6TreatmentData
a <- df %>% tabyl(what.do.if.owl.lands.on.the.roof, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
a
a <- a %>% gather(stage, percent, 2:3) # convert to long format
a
a$percent <- as.numeric(a$percent) # convert percent to numeric
class(a$percent)
# Calculate sample size
b <- df %>% tabyl(what.do.if.owl.lands.on.the.roof, stage, show_missing_levels = FALSE) # create n table
b
b <- b %>% gather(stage, n, 2:3) # convert to long format
b
a$n <- b$n # add n column to percent table
a
# Add controls
Q6ControlData <- filter(Q6Data, hear.talk != "yes") # remove respondents that did  hear talk
df <- Q6ControlData
c <- df %>% tabyl(what.do.if.owl.lands.on.the.roof, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
c
names(c) <- c("what.do.if.owl.lands.on.the.roof", "1 prior", "3 control")
c
c <- c %>% gather(stage, percent, 2:3) # convert to long format
c
a
ggplot(data, aes(fill=what.did.when.last.saw.owl, x = stage)) + geom_bar() # plot shows missing values
# fliter out the blanks in resonse variable & delete rows that did not hear talk
questionData <- filter(data, what.did.when.last.saw.owl != "") # removes missing values in response variable
ggplot(questionData, aes(fill=what.did.when.last.saw.owl, x = stage)) + geom_bar() # missing values gone
# First test those that did hear the talk
ggplot(questionData, aes(fill=hear.talk, x = stage)) + geom_bar()
questionTreatmentData <- filter(questionData, hear.talk != "no") # remove respondents that did not hear talk
ggplot(questionTreatmentData, aes(fill=hear.talk, x = stage)) + geom_bar() # No talk gone
# Check plot of resonse variable
ggplot(questionTreatmentData, aes(fill=what.did.when.last.saw.owl, x = stage)) + geom_bar() # Looks like a relationship
###################################################################
# Q7:What did you do the last time you saw an owl?
# Run away/Nothing/Try and kill the owl
###################################################################
# fliter out the blanks in resonse variable & delete rows that did not hear talk
Q7Data <- filter(data, what.did.when.last.saw.owl != "") # removes missing values in response variable
###################################################################
# Q7:What did you do the last time you saw an owl?
# Run away/Nothing/Try and kill the owl
###################################################################
# fliter out the blanks in resonse variable & delete rows that did not hear talk
Q7Data <- filter(data, what.did.when.last.saw.owl != "") # removes missing values in response variable
# First test those that did hear the talk
Q7TreatmentData <- filter(Q7Data, hear.talk != "no") # remove respondents that did not hear talk
df <- Q7ControlData
c <- df %>% tabyl(what.did.when.last.saw.owl, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
c
###################################################################
# Q7:What did you do the last time you saw an owl?
# Run away/Nothing/Try and kill the owl
###################################################################
# fliter out the blanks in resonse variable & delete rows that did not hear talk
Q7Data <- filter(data, what.did.when.last.saw.owl != "") # removes missing values in response variable
###################################################################
# Q7:What did you do the last time you saw an owl?
# Run away/Nothing/Try and kill the owl
###################################################################
# fliter out the blanks in resonse variable & delete rows that did not hear talk
Q7Data <- filter(data, what.did.when.last.saw.owl != "") # removes missing values in response variable
# First test those that did hear the talk
Q7TreatmentData <- filter(Q7Data, hear.talk != "no") # remove respondents that did not hear talk
df <- Q7TreatmentData
c <- df %>% tabyl(what.did.when.last.saw.owl, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
c
names(c) <- c("what.did.when.last.saw.owl", "1 prior", "3 control")
c
c <- c %>% gather(stage, percent, 2:3) # convert to long format
c
c$percent <- as.numeric(c$percent) # convert percent to numeric
class(c$percent)
d <- df %>% tabyl(what.did.when.last.saw.owl, stage, show_missing_levels = FALSE) # create n table
d
names(d) <- c("what.did.when.last.saw.owl", "1 prior", "3 control")
d
d <- d %>% gather(stage, n, 2:3) # convert to long format
d
c$n <- d$n # add n column to percent table
c
###################################################################
# Q7:What did you do the last time you saw an owl?
# Run away/Nothing/Try and kill the owl
###################################################################
# fliter out the blanks in resonse variable & delete rows that did not hear talk
Q7Data <- filter(data, what.did.when.last.saw.owl != "") # removes missing values in response variable
# First test those that did hear the talk
Q7TreatmentData <- filter(Q7Data, hear.talk != "no") # remove respondents that did not hear talk
df <- Q7TreatmentData
a <- df %>% tabyl(what.did.when.last.saw.owl, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
a
a <- a %>% gather(stage, percent, 2:3) # convert to long format
a
a$percent <- as.numeric(a$percent) # convert percent to numeric
class(a$percent)
# Calculate sample size
b <- df %>% tabyl(what.did.when.last.saw.owl, stage, show_missing_levels = FALSE) # create n table
b
b <- b %>% gather(stage, n, 2:3) # convert to long format
b
a$n <- b$n # add n column to percent table
a
# Add controls
Q7ControlData <- filter(Q7Data, hear.talk != "yes") # remove respondents that did  hear talk
df <- Q7ControlData
c <- df %>% tabyl(what.did.when.last.saw.owl, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
c
names(c) <- c("what.did.when.last.saw.owl", "1 prior", "3 control")
c
c <- c %>% gather(stage, percent, 2:3) # convert to long format
c
c$percent <- as.numeric(c$percent) # convert percent to numeric
class(c$percent)
d <- df %>% tabyl(what.did.when.last.saw.owl, stage, show_missing_levels = FALSE) # create n table
d
names(d) <- c("what.did.when.last.saw.owl", "1 prior", "3 control")
d
d <- d %>% gather(stage, n, 2:3) # convert to long format
d
c$n <- d$n # add n column to percent table
c
e <- rbind(a, c[4:6,])
e
e$percent <- as.numeric(e$percent)
e
cbp3<- c("#56B4E9", "#009E73", "#E69F00") # create colour blind palatte with 3 colours (used palatte from https://www.datanovia.com/en/blog/ggplot-colors-best-tricks-you-will-love/)
library(ggplot2)
p <- ggplot(e, aes(x = stage, y = percent,fill = what.did.when.last.saw.owl)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp3, name = "Which of best describes \nyour response to seeing an \nowl", labels = c("Terrified", "Very afriad", "Not afraid")) +
ylim(0,100) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
p <- ggplot(e, aes(x = stage, y = percent,fill = what.did.when.last.saw.owl)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp3, name = "Which of best describes \nyour response to seeing an \nowl") +
ylim(0,100) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
p <- ggplot(e, aes(x = stage, y = percent,fill = what.did.when.last.saw.owl)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp3, name = "What did you do the last \ntime you saw an owl?", labels = c("Try and kill the owl", "Run away", "Nothing")) +
ylim(0,100) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
e
p7 <- p
plot_grid(p4, p5, p6, p7, ncol = 1)
# Combine plots
plot2 <- plot_grid(p4, p5, p6,, p7, ncol = 1, labels = "auto")
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = "auto")
plot2
save_plot("plot2.png", plot2, dpi = 600, base_width = 9, base_height = 9)
p <- ggplot(e, aes(x = stage, y = percent,fill = afraid.of.owls)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp3, name = "Which of best describes \nyour response to seeing an \nowl?", labels = c("Terrified", "Very afriad", "Not afraid")) +
ylim(0,100) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
p5 <- p
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = "auto")
plot2
save_plot("plot2.png", plot2, dpi = 600, base_width = 9, base_height = 9)
df <- Q5TreatmentData
a <- df %>% tabyl(afraid.of.owls, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
a
a <- a %>% gather(stage, percent, 2:3) # convert to long format
a
a$percent <- as.numeric(a$percent) # convert percent to numeric
class(a$percent)
# Calculate sample size
b <- df %>% tabyl(afraid.of.owls, stage, show_missing_levels = FALSE) # create n table
b
b <- b %>% gather(stage, n, 2:3) # convert to long format
b
a$n <- b$n # add n column to percent table
a
# Add controls
Q5ControlData <- filter(Q5Data, hear.talk != "yes") # remove respondents that did  hear talk
df <- Q5ControlData
c <- df %>% tabyl(afraid.of.owls, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
c
names(c) <- c("afraid.of.owls", "1 prior", "3 control")
c
c <- c %>% gather(stage, percent, 2:3) # convert to long format
c
c$percent <- as.numeric(c$percent) # convert percent to numeric
class(c$percent)
d <- df %>% tabyl(afraid.of.owls, stage, show_missing_levels = FALSE) # create n table
d
names(d) <- c("afraid.of.owls", "1 prior", "3 control")
d
d <- d %>% gather(stage, n, 2:3) # convert to long format
d
c$n <- d$n # add n column to percent table
c
e <- rbind(a, c[4:6,])
e
e$percent <- as.numeric(e$percent)
e
cbp3<- c("#56B4E9", "#009E73", "#E69F00") # create colour blind palatte with 3 colours (used palatte from https://www.datanovia.com/en/blog/ggplot-colors-best-tricks-you-will-love/)
library(ggplot2)
p <- ggplot(e, aes(x = stage, y = percent,fill = afraid.of.owls)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp3, name = "Which of best describes \nyour response to seeing an \nowl?", labels = c("Terrified", "Very afriad", "Not afraid")) +
ylim(0,100) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
p
###################################################################
# Q5: Which of the three choices best describes your response to seeing an owl?
# Not afraid/Very afraid/Terrified
###################################################################
Q5Data <- filter(data, afraid.of.owls != "") # removes missing values in response variable
a
###################################################################
# Q5: Which of the three choices best describes your response to seeing an owl?
# Not afraid/Very afraid/Terrified
###################################################################
Q5Data <- filter(data, afraid.of.owls != "") # removes missing values in response variable
# First test those that did hear the talk
Q5TreatmentData <- filter(Q5Data, hear.talk != "no") # remove respondents that did not hear talk
df <- Q5TreatmentData
a <- df %>% tabyl(afraid.of.owls, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
a
a <- a %>% gather(stage, percent, 2:3) # convert to long format
a
a$percent <- as.numeric(a$percent) # convert percent to numeric
class(a$percent)
# Calculate sample size
b <- df %>% tabyl(afraid.of.owls, stage, show_missing_levels = FALSE) # create n table
b
b <- b %>% gather(stage, n, 2:3) # convert to long format
b
a$n <- b$n # add n column to percent table
a
# Add controls
Q5ControlData <- filter(Q5Data, hear.talk != "yes") # remove respondents that did  hear talk
df <- Q5ControlData
c <- df %>% tabyl(afraid.of.owls, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
c
names(c) <- c("afraid.of.owls", "1 prior", "3 control")
c
c <- c %>% gather(stage, percent, 2:3) # convert to long format
c
c$percent <- as.numeric(c$percent) # convert percent to numeric
class(c$percent)
d <- df %>% tabyl(afraid.of.owls, stage, show_missing_levels = FALSE) # create n table
d
names(d) <- c("afraid.of.owls", "1 prior", "3 control")
d
d <- d %>% gather(stage, n, 2:3) # convert to long format
d
c$n <- d$n # add n column to percent table
c
e <- rbind(a, c[4:6,])
e
e$percent <- as.numeric(e$percent)
e
cbp3<- c("#56B4E9", "#009E73", "#E69F00") # create colour blind palatte with 3 colours (used palatte from https://www.datanovia.com/en/blog/ggplot-colors-best-tricks-you-will-love/)
library(ggplot2)
p <- ggplot(e, aes(x = stage, y = percent,fill = afraid.of.owls)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp3, name = "Which of best describes \nyour response to seeing an \nowl?", labels = c("Terrified", "Very afriad", "Not afraid")) +
ylim(0,100) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
e
cbp3<- c("#56B4E9", "#009E73", "#E69F00") # create colour blind palatte with 3 colours (used palatte from https://www.datanovia.com/en/blog/ggplot-colors-best-tricks-you-will-love/)
library(ggplot2)
cbp3<- c("#56B4E9", "#009E73", "#E69F00") # create colour blind palatte with 3 colours (used palatte from https://www.datanovia.com/en/blog/ggplot-colors-best-tricks-you-will-love/)
library(ggplot2)
p <- ggplot(e, aes(x = stage, y = percent,fill = afraid.of.owls)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp3, name = "Which of best describes \nyour response to seeing an \nowl?", labels = c("Terrified", "Very afriad", "Not afraid")) +
ylim(0,100) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
p5 <- p
library(cowplot)
plot_grid(p4, p5, ncol = 1)
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = "auto")
plot2
save_plot("plot2.png", plot2, dpi = 600, base_width = 9, base_height = 9)
Q6Data <- filter(data, what.do.if.owl.lands.on.the.roof != "") # removes missing values in response variable
# First test those that did hear the talk
Q6TreatmentData <- filter(Q6Data, hear.talk != "no") # remove respondents that did not hear talk
df <- Q6TreatmentData
a <- df %>% tabyl(what.do.if.owl.lands.on.the.roof, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
a
a <- a %>% gather(stage, percent, 2:3) # convert to long format
a
a$percent <- as.numeric(a$percent) # convert percent to numeric
class(a$percent)
# Calculate sample size
b <- df %>% tabyl(what.do.if.owl.lands.on.the.roof, stage, show_missing_levels = FALSE) # create n table
b
b <- b %>% gather(stage, n, 2:3) # convert to long format
b
a$n <- b$n # add n column to percent table
a
# Add controls
Q6ControlData <- filter(Q6Data, hear.talk != "yes") # remove respondents that did  hear talk
df <- Q6ControlData
c <- df %>% tabyl(what.do.if.owl.lands.on.the.roof, stage, show_missing_levels = FALSE) %>% adorn_percentages("col") %>% adorn_pct_formatting(digits = 1, affix_sign = FALSE) # create percentage table
c
names(c) <- c("what.do.if.owl.lands.on.the.roof", "1 prior", "3 control")
c
c <- c %>% gather(stage, percent, 2:3) # convert to long format
c
a
c$percent <- as.numeric(c$percent) # convert percent to numeric
class(c$percent)
d <- df %>% tabyl(what.do.if.owl.lands.on.the.roof, stage, show_missing_levels = FALSE) # create n table
d
names(d) <- c("what.do.if.owl.lands.on.the.roof", "1 prior", "3 control")
d
d <- d %>% gather(stage, n, 2:3) # convert to long format
d
c$n <- d$n # add n column to percent table
c
e <- rbind(a, c[5:8,])
e
e$percent <- as.numeric(e$percent)
e
cbp4<- c("#56B4E9", "#009E73", "#E69F00", "#D55E00") # create colour blind palatte with 3 colours (used palatte from https://www.datanovia.com/en/blog/ggplot-colors-best-tricks-you-will-love/)
library(ggplot2)
p <- ggplot(e, aes(x = stage, y = percent,fill = what.do.if.owl.lands.on.the.roof)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = cbp4, name = "What do you do if an \nowl lands on the roof of \nyour home?", labels = c("Try and kill the owl", "Chase the owl away", "Run away", "Do nothing")) +
ylim(0,101) +
xlab("Group") + ylab("Percent") +
scale_x_discrete(labels=c("Before \npresentation", "After \npresentation", "Control")) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5))
p
p
p6 <- p
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = "auto")
plot2
save_plot("plot2.png", plot2, dpi = 600, base_width = 9, base_height = 9)
save_plot("plot2.png", plot2, dpi = 500, base_width = 9, base_height = 9)
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = "Q4", "Q5", "Q6", "Q7")
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6","Q7")
save_plot("plot2.png", plot2, dpi = 500, base_width = 9, base_height = 9)
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6","Q7"))
plot2
save_plot("plot2.png", plot2, dpi = 500, base_width = 9, base_height = 9)
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_fontface = "regular")
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_fontface = "plain")
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_fontface = "plain")
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_fontface = "plain")
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_fontface = "plain", label_size = 10)
plot2
save_plot("plot2.png", plot2, dpi = 500, base_width = 9, base_height = 9)
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, hjust = -0.6)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, hjust = -0.6)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, hjust = -0.8)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, hjust = -1)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, label_x = -0.1)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, label_x = 0.1)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, label_x = 1)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, label_x = 0.01)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, label_x = 0.09)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, label_x = -0.09)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, label_x = -0.09)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, scale = 0.9)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, scale = 0.9)
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, scale = 0.9)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), label_size = 10, scale = 0.95)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = c("Q4", "Q5", "Q6", "Q7"), scale = 0.95)
plot2
# Combine plots
plot2 <- plot_grid(p4, p5, p6, p7, ncol = 1, labels = "auto", scale = 0.95)
plot2
